---
- name: Install k3s service
  register: k3s_service
  template:
    src: "k3s.service.j2"
    dest: "{{ systemd_dir }}/k3s.service"
    owner: root
    group: root
    mode: 0755
  notify:
    - restart k3s

- name: Enable k3s service
  systemd:
    name: k3s
    daemon_reload: yes
    state: started
    enabled: yes

- name: Set up kubectl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    owner: root
    group: root
    state: link

- name: Set up crictl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/crictl
    owner: root
    group: root
    state: link

- name: Read node token from master
  slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token

- name: Store Master node-token
  set_fact:
    token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"

- name: Consume kubeconfig and assign to variable
  slurp:
    src: /etc/rancher/k3s/k3s.yaml
  register: kubeconfig_base64

- name: Store kube config
  set_fact:
    kubeconfig: "{{ kubeconfig_base64.content | b64decode }}"

- name: Create .kube directory for Ansible user
  file:
    path: "{{ ansible_env['PWD'] }}/.kube"
    state: directory
    owner: "{{ ansible_user_id }}"
  become: no

- name: Copy kube config to user home on remote machine and replace IP
  copy:
    content: "{{ kubeconfig | regex_replace('https://127.0.0.1:6443', 'https://' + master_ip + ':6443') }}"
    dest: "{{ ansible_env['PWD'] }}/.kube/config"
    remote_src: yes
    owner: "{{ ansible_user_id }}"
  become: no

- name: Copy kube config to control machine and replace IP
  copy:
    content: "{{ kubeconfig | regex_replace('https://127.0.0.1:6443', 'https://' + master_ip + ':6443') }}"
    dest: ./kube.config
  delegate_to: localhost
  become: no
